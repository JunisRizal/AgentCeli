#!/bin/bash

# AgentCeli Monitoring Dashboard Starter
# Funktionsf√§higes Dashboard mit Backend-Verbindung

clear
echo "üîç AgentCeli Monitoring Dashboard"
echo "=================================="
echo ""

# Check if Python 3 is available
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 ist erforderlich aber nicht installiert"
    exit 1
fi

# Check if Flask is available
if ! python3 -c "import flask" &> /dev/null; then
    echo "‚ùå Flask ist erforderlich. Installiere mit: pip3 install flask"
    exit 1
fi

echo "‚úÖ Python 3: Verf√ºgbar"
echo "‚úÖ Flask: Verf√ºgbar"
echo ""

# Check port availability
if lsof -Pi :8090 -sTCP:LISTEN -t >/dev/null 2>&1; then
    echo "‚ö†Ô∏è  Port 8090 ist bereits belegt"
    echo "Beende bestehende Prozesse..."
    pkill -f "monitoring_dashboard.py"
    sleep 2
fi

echo "üöÄ Starte Monitoring Dashboard..."
echo ""

# Start the dashboard
python3 monitoring_dashboard.py &
DASHBOARD_PID=$!

# Wait for startup
sleep 3

# Check if dashboard is running
if ps -p $DASHBOARD_PID > /dev/null 2>&1; then
    echo "‚úÖ Dashboard erfolgreich gestartet!"
    echo ""
    echo "üåê Dashboard URLs:"
    echo "   ‚Ä¢ Lokal:     http://localhost:8090"
    echo "   ‚Ä¢ Netzwerk:  http://$(hostname -I | awk '{print $1}'):8090"
    echo ""
    echo "üìä API Endpunkte:"
    echo "   ‚Ä¢ /api/overview  - Schnell√ºbersicht"
    echo "   ‚Ä¢ /api/system    - System & Prozesse"
    echo "   ‚Ä¢ /api/apis      - API Status"
    echo "   ‚Ä¢ /api/data      - Datenfiles"
    echo "   ‚Ä¢ /api/logs      - Log-Dateien"
    echo "   ‚Ä¢ /api/crypto    - Krypto-Daten"
    echo ""
    echo "‚úÖ Backend-Verbindung: Aktiv"
    echo "‚úÖ Live-Monitoring: Aktiv"
    echo "‚úÖ Auto-Refresh: 30 Sekunden"
    echo ""
    echo "Dr√ºcke Ctrl+C um zu beenden..."
    
    # Wait for user interrupt
    wait $DASHBOARD_PID
else
    echo "‚ùå Dashboard konnte nicht gestartet werden"
    echo "√úberpr√ºfe die Logs f√ºr weitere Informationen"
    exit 1
fi